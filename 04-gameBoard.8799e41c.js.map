{"mappings":"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","sources":["src/game_logic.js"],"sourcesContent":["// Вставте JavaScript-код тут\nclass GameElement {\n  constructor(type) {\n    this.type = type;\n  }\n}\n\nclass GameBoard {\n  constructor(rows, cols) {\n    this.rows = rows;\n    this.cols = cols;\n    this.board = this.createBoard();\n  }\n\n  createBoard() {\n    const symbols = ['♠️', '♣️', '♥️', '♦️'];\n    const board = [];\n    for (let i = 0; i < this.rows; i++) {\n      const row = [];\n      for (let j = 0; j < this.cols; j++) {\n        const randomType = symbols[Math.floor(Math.random() * symbols.length)];\n        const element = new GameElement(randomType);\n        row.push(element);\n      }\n      board.push(row);\n    }\n    return board;\n  }\n\n  printBoard() {\n    for (let i = 0; i < this.rows; i++) {\n      console.log(\n        this.board[i].map(element => element?.type || 'null').join(' ')\n      );\n    }\n  }\n\n  findAndRemoveGroup(row, col) {\n    const elementType = this.board[row][col]?.type;\n\n    if (!elementType) {\n      return;\n    }\n\n    const visited = Array.from({ length: this.rows }, () =>\n      Array(this.cols).fill(false)\n    );\n\n    const dfs = (r, c) => {\n      if (\n        r < 0 ||\n        r >= this.rows ||\n        c < 0 ||\n        c >= this.cols ||\n        visited[r][c] ||\n        this.board[r][c]?.type !== elementType\n      ) {\n        return;\n      }\n\n      visited[r][c] = true;\n      this.board[r][c] = null;\n\n      dfs(r - 1, c); // Вгору\n      dfs(r + 1, c); // Вниз\n      dfs(r, c - 1); // Вліво\n      dfs(r, c + 1); // Вправо\n    };\n\n    dfs(row, col);\n  }\n\n  // Перевірка, чи є варіанти об'єднання\n  hasMatchingGroups() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (this.board[i][j] && this.isValidMove(i, j)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // Перевірка, чи можна вибрати конкретну клітину\n  isValidMove(row, col) {\n    if (!this.board[row][col]) {\n      // Якщо клітка порожня, перевіряємо біля неї\n      if (\n        (row - 1 >= 0 &&\n          this.board[row - 1][col]?.type === this.board[row - 2][col]?.type) ||\n        (col - 1 >= 0 &&\n          this.board[row][col - 1]?.type === this.board[row][col - 2]?.type)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n// Приклад використання\nconst gameBoard = new GameBoard(6, 7);\nconst gameBoardDiv = document.getElementById('gameBoard');\nconst updateGameButton = document.getElementById('updateGameButton');\n\nfunction updateGameBoardView() {\n  gameBoardDiv.innerHTML = '';\n\n  for (let i = 0; i < gameBoard.rows; i++) {\n    for (let j = 0; j < gameBoard.cols; j++) {\n      const cellDiv = document.createElement('div');\n      cellDiv.classList.add('cell');\n      cellDiv.textContent = gameBoard.board[i][j]\n        ? gameBoard.board[i][j].type\n        : '';\n\n      cellDiv.addEventListener('click', () => {\n        gameBoard.findAndRemoveGroup(i, j);\n        updateGameBoardView();\n      });\n\n      gameBoardDiv.appendChild(cellDiv);\n    }\n  }\n  if (gameBoard.gameOver) {\n    updateGameButton.textContent = 'Почати нову гру';\n  }\n}\n\nupdateGameButton.addEventListener('click', () => {\n  gameBoard.board = gameBoard.createBoard();\n  gameBoard.gameOver = false;\n  updateGameButton.textContent = 'Оновити гру';\n  updateGameBoardView();\n});\n\nupdateGameBoardView();\n"],"names":["$0bb4de050250203a$var$GameElement","constructor","type","this","$0bb4de050250203a$var$gameBoard","createBoard","symbols","board","i","rows","row","j","cols","randomType","Math","floor","random","length","element","push","printBoard","console","log","map","join","findAndRemoveGroup","col","ref1","elementType","visited","Array","from","fill","dfs","r","c","ref","hasMatchingGroups","isValidMove","ref2","ref3","ref4","$0bb4de050250203a$var$gameBoardDiv","document","getElementById","$0bb4de050250203a$var$updateGameButton","$0bb4de050250203a$var$updateGameBoardView","innerHTML","cellDiv","createElement","classList","add","textContent","addEventListener","appendChild","gameOver"],"version":3,"file":"04-gameBoard.8799e41c.js.map"}